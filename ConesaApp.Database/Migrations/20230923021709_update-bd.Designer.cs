// <auto-generated />
using System;
using ConesaApp.Database.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConesaApp.Database.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230923021709_update-bd")]
    partial class updatebd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Cliente", b =>
                {
                    b.Property<int>("clienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("clienteID"), 1L, 1);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clienteID");

                    b.HasIndex(new[] { "clienteID" }, "clienteID_UQ")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Cobertura", b =>
                {
                    b.Property<int>("coberturaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("coberturaID"), 1L, 1);

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("coberturaID");

                    b.HasIndex(new[] { "coberturaID" }, "coberturaID_UQ")
                        .IsUnique();

                    b.ToTable("Coberturas");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Empresa", b =>
                {
                    b.Property<int>("empresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("empresaID"), 1L, 1);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("empresaID");

                    b.HasIndex(new[] { "empresaID" }, "empresaID_UQ")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.MetodoPago", b =>
                {
                    b.Property<int>("metodoPagoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("metodoPagoID"), 1L, 1);

                    b.Property<string>("metodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("metodoPagoID");

                    b.HasIndex(new[] { "metodoPagoID" }, "metodoPagoID_UQ")
                        .IsUnique();

                    b.ToTable("MetodoPagos");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Pagos", b =>
                {
                    b.Property<int>("pagoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pagoID"), 1L, 1);

                    b.Property<int>("clienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("metodoID")
                        .HasColumnType("int");

                    b.Property<int>("metodoPagoID")
                        .HasColumnType("int");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("polizaID")
                        .HasColumnType("int");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int");

                    b.HasKey("pagoID");

                    b.HasIndex("clienteID");

                    b.HasIndex("metodoPagoID");

                    b.HasIndex("polizaID");

                    b.HasIndex("usuarioID");

                    b.HasIndex(new[] { "pagoID" }, "pagoID_UQ")
                        .IsUnique();

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Poliza", b =>
                {
                    b.Property<int>("polizaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("polizaID"), 1L, 1);

                    b.Property<bool>("Actualizado")
                        .HasColumnType("bit");

                    b.Property<int>("coberturaID")
                        .HasColumnType("int");

                    b.Property<int>("empresaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("finVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("inicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<int>("nroPoliza")
                        .HasColumnType("int");

                    b.Property<decimal>("valorAsegurado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("valorCuota")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("polizaID");

                    b.HasIndex("coberturaID");

                    b.HasIndex("empresaID");

                    b.HasIndex(new[] { "polizaID" }, "polizaID_UQ")
                        .IsUnique();

                    b.ToTable("Polizas");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Usuario", b =>
                {
                    b.Property<int>("usuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usuarioID"), 1L, 1);

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usuarioID");

                    b.HasIndex(new[] { "usuarioID" }, "usuarioID_UQ")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Vehiculo", b =>
                {
                    b.Property<int>("vehiculoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehiculoID"), 1L, 1);

                    b.Property<int?>("año")
                        .HasColumnType("int");

                    b.Property<int>("clienteID")
                        .HasColumnType("int");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("patente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("polizaID")
                        .HasColumnType("int");

                    b.HasKey("vehiculoID");

                    b.HasIndex("clienteID");

                    b.HasIndex("polizaID");

                    b.HasIndex(new[] { "vehiculoID" }, "vehiculoID_UQ")
                        .IsUnique();

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Pagos", b =>
                {
                    b.HasOne("ConesaApp.Database.Data.Entities.Cliente", "Cliente")
                        .WithMany("Pagos")
                        .HasForeignKey("clienteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConesaApp.Database.Data.Entities.MetodoPago", "MetodoPago")
                        .WithMany("Pagos")
                        .HasForeignKey("metodoPagoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConesaApp.Database.Data.Entities.Poliza", "Poliza")
                        .WithMany("Pagos")
                        .HasForeignKey("polizaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConesaApp.Database.Data.Entities.Usuario", "Usuario")
                        .WithMany("Pagos")
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("MetodoPago");

                    b.Navigation("Poliza");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Poliza", b =>
                {
                    b.HasOne("ConesaApp.Database.Data.Entities.Cobertura", null)
                        .WithMany("Polizas")
                        .HasForeignKey("coberturaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConesaApp.Database.Data.Entities.Empresa", null)
                        .WithMany("Polizas")
                        .HasForeignKey("empresaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Vehiculo", b =>
                {
                    b.HasOne("ConesaApp.Database.Data.Entities.Cliente", "Cliente")
                        .WithMany("Vehiculos")
                        .HasForeignKey("clienteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConesaApp.Database.Data.Entities.Poliza", "Poliza")
                        .WithMany()
                        .HasForeignKey("polizaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Poliza");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Cliente", b =>
                {
                    b.Navigation("Pagos");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Cobertura", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Empresa", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.MetodoPago", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Poliza", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("ConesaApp.Database.Data.Entities.Usuario", b =>
                {
                    b.Navigation("Pagos");
                });
#pragma warning restore 612, 618
        }
    }
}
